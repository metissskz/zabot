import os
import asyncio
from aiohttp import web
from aiogram import Bot, Dispatcher
from aiogram.filters import CommandStart
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.webhook.aiohttp_server import SimpleRequestHandler

from db import UserDB  # –ù–æ–≤—ã–π —Ñ–∞–π–ª —Å –ª–æ–≥–∏–∫–æ–π –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏
from handlers import router  # –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π handlers.py —Å –æ–ø–ª–∞—Ç–æ–π

# üõ† –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
TOKEN = os.getenv("BOT_TOKEN")
WEBAPP_HOST = os.getenv("RENDER_EXTERNAL_HOSTNAME")
WEBHOOK_PATH = "/webhook"
WEBHOOK_URL = f"https://{WEBAPP_HOST}{WEBHOOK_PATH}"

# üéõ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ dispatcher
bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())
dp.include_router(router)

# üíæ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db = UserDB()

async def on_startup_web(app: web.Application):
    # –ó–∞–ø—É—Å–∫ –≤–µ–±—Ö—É–∫–∞ –Ω–∞ Render
    await bot.set_webhook(WEBHOOK_URL)
    print("üöÄ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:", WEBHOOK_URL)
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ë–î
    await db.connect()
    await db.init_table()

async def on_shutdown_web(app: web.Application):
    await bot.delete_webhook()
    await db.pool.close()

# üåê –°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–¥–ª—è webhook)
app = web.Application()
SimpleRequestHandler(dispatcher=dp, bot=bot).register(app, path=WEBHOOK_PATH)
app.on_startup.append(on_startup_web)
app.on_shutdown.append(on_shutdown_web)

if __name__ == "__main__":
    # üß™ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (polling)
    async def start_polling():
        await db.connect()
        await db.init_table()
        from aiogram import executor
        executor.start_polling(dp, skip_updates=True)
    asyncio.run(start_polling())
