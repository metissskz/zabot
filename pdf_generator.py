from fpdf import FPDF
import os
from datetime import datetime

def format_currency(value):
    try:
        return f"{int(float(value)):,} ‚Ç∏".replace(",", " ")
    except (ValueError, TypeError):
        return "‚Äî"

def safe_get(data, key, default=None):
    return data[key] if key in data else default

def generate_pdf(data):
    pdf = FPDF()
    pdf.add_page()

    # –®—Ä–∏—Ñ—Ç—ã
    pdf.add_font('DejaVu', '', './fonts/DejaVuSans.ttf', uni=True)
    pdf.add_font('DejaVu', 'B', './fonts/DejaVuSans-Bold.ttf', uni=True)
    pdf.set_font('DejaVu', '', 11)

    # –î–∞–Ω–Ω—ã–µ
    fence_type = safe_get(data, "fence_type", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    try:
        length = float(safe_get(data, "length", 0) or 0)
    except (ValueError, TypeError):
        length = 0
    has_foundation = safe_get(data, "foundation", False)
    slope = safe_get(data, "slope", False)

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    pdf.set_text_color(0, 0, 0)
    pdf.cell(200, 10, txt="–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", ln=True, align="C")
    pdf.ln(8)
    pdf.cell(200, 10, txt=f"–¢–∏–ø –∑–∞–±–æ—Ä–∞: {fence_type}", ln=True)
    pdf.cell(200, 10, txt=f"–î–ª–∏–Ω–∞: {length} –º", ln=True)
    pdf.cell(200, 10, txt=f"–§—É–Ω–¥–∞–º–µ–Ω—Ç: {'–î–∞' if has_foundation else '–ù–µ—Ç'}", ln=True)
    pdf.cell(200, 10, txt=f"–£–∫–ª–æ–Ω: {'–î–∞' if slope else '–ù–µ—Ç'}", ln=True)
    pdf.ln(5)

    # –¶–µ–Ω—ã
    PROFNASTIL_PRICE = 2300
    LAG_PRICE = 800
    STAKE_PRICE = 1500 * 2.5
    SCREWS_PACK_PRICE = 2000
    CONCRETE_PRICE_M3 = 22000

    # –†–∞—Å—á—ë—Ç—ã
    profile_width = 1.1
    sheets_count = int(length / profile_width + 0.5)
    sheets_total = sheets_count * PROFNASTIL_PRICE

    lag_length = length * 3
    lag_total = lag_length * LAG_PRICE

    stake_count = int(length / 3) + 1
    stake_total = stake_count * STAKE_PRICE

    screws_total = SCREWS_PACK_PRICE

    concrete_m3 = length * 0.3 * 0.2 if has_foundation else 0
    concrete_total = concrete_m3 * CONCRETE_PRICE_M3

    total_material = sheets_total + lag_total + stake_total + screws_total + concrete_total

    # –¢–∞–±–ª–∏—Ü–∞
    pdf.set_fill_color(240, 240, 240)
    pdf.set_font('DejaVu', 'B', 11)
    pdf.cell(60, 10, "–ú–∞—Ç–µ—Ä–∏–∞–ª", 1, 0, 'C', True)
    pdf.cell(40, 10, "–†–∞—Å—Ö–æ–¥", 1, 0, 'C', True)
    pdf.cell(40, 10, "–¶–µ–Ω–∞ –∑–∞ –µ–¥.", 1, 0, 'C', True)
    pdf.cell(50, 10, "–°—É–º–º–∞", 1, 1, 'C', True)
    pdf.set_font('DejaVu', '', 11)

    rows = [
        ("–ü—Ä–æ—Ñ–Ω–∞—Å—Ç–∏–ª", f"{sheets_count} –ª–∏—Å—Ç.", PROFNASTIL_PRICE, sheets_total),
        ("–õ–∞–≥–∏", f"{int(lag_length)} –º", LAG_PRICE, lag_total),
        ("–°—Ç–æ–π–∫–∏", f"{stake_count} —à—Ç", STAKE_PRICE, stake_total),
        ("–°–∞–º–æ—Ä–µ–∑—ã", "1 –ø–∞—á–∫–∞", SCREWS_PACK_PRICE, screws_total)
    ]

    if has_foundation:
        rows.append(("–ë–µ—Ç–æ–Ω", f"{concrete_m3:.2f} –º¬≥", CONCRETE_PRICE_M3, concrete_total))

    for name, qty, unit_price, total in rows:
        pdf.cell(60, 10, name, 1)
        pdf.cell(40, 10, qty, 1)
        pdf.cell(40, 10, format_currency(unit_price), 1)
        pdf.cell(50, 10, format_currency(total), 1)
        pdf.ln(10)

    pdf.set_font('DejaVu', 'B', 11)
    pdf.cell(140, 10, "–ò—Ç–æ–≥–æ –∑–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:", 1)
    pdf.cell(50, 10, format_currency(total_material), 1, ln=True)

    # –°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–±–æ—Ç
    if length <= 50:
        work_price = 19980 if has_foundation else 13980
    else:
        work_price = 13980 if has_foundation else 9900
    if slope:
        work_price *= 1.1

    work_total = work_price * length

    pdf.ln(5)
    pdf.set_font('DejaVu', '', 11)
    pdf.multi_cell(0, 8, f"üíº –†–∞–±–æ—Ç—ã –ø–æ–¥ –∫–ª—é—á: {format_currency(work_total)}")

    pdf.set_font('DejaVu', size=10)
    lines = [
        "–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–±–æ—Ç:",
        "- –†–∞–∑–º–µ—Ç–∫–∞",
        "- –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –∫–æ–ø–∫–∞ —Ç—Ä–∞–Ω—à–µ–π",
        "- –ü–æ–¥—Å—ã–ø–∫–∞ –∏ —Ç—Ä–∞–º–±–æ–≤–∫–∞",
        "- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–ø–∞–ª—É–±–∫–∏ –∏ –ø–æ–º–æ—â—å –ø–æ –∞—Ä–µ–Ω–¥–µ",
        "- –ê—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
        "- –ó–∞–ª–∏–≤–∫–∞ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞",
        "- –î–µ–º–æ–Ω—Ç–∞–∂ –æ–ø–∞–ª—É–±–∫–∏",
        "- –ú–æ–Ω—Ç–∞–∂ —Å—Ç–æ–µ–∫ –∏ –ª–∞–≥",
        "- –ö—Ä–µ–ø–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–Ω–∞—Å—Ç–∏–ª–∞",
        "- –°–≤–∞—Ä–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã"
    ]
    for line in lines:
        pdf.multi_cell(0, 6, line)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    os.makedirs("output", exist_ok=True)
    filename = f"./output/kp_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf"
    pdf.output(filename)
    return filename
